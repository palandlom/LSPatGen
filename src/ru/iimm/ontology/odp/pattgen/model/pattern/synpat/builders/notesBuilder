Вопрос: для каждого паттерна д.б. список паттернов, которые можно в него впердолить.
Ответ: создать для паттернов метод public List<IRI> getSuitablePattern() => список IRI паттернов-компонентов. Этот метод реализован у абстрактных паттернов, обозначающих группы

Вопрос: В проге есть список с добавляемыми паттернами, там IRI паттернов. В нем надо определить выбранный паттерн (П) и создать для него соответствующий Конфигуратор (БЛ). Как определить связь "паттерн-Конфигуратор"?
Ответ: В абстрактномКонфигураторе задать обобщенный конструктор - пусть по IRI выдает нужный Конфигуратор. !!! Можно будет оперировать только методами Абстрактного Конфигуратора.

Вопрос: Конфигураторы надо ли их определять для каждого паттерна?
Ответ: пока нет - только для основных типов из стратегий добавления: ситуационных, перечислимых (итемных и простых), однопозиционных, отношений. 

Вопрос: Какие стратегии добавления должны быть?
Тк зависимоссть такая: Стратегия --> медотДобавления(), то СТР определяется, исходя из разных по сигнатуре методов добавления. Получились такие стратегии:
SitbasedPattern2All ---> situation.add(любой паттерн)
SingleProperty2Position ---> position.add(SinglePropertyCDP spPat, OWLObjectProperty prop, subject, object)
Sequence2Position ---> position.add(SequenceCDP seqPat, OWLObjectProperty prop,	OWLClass subject)
Position2Position ---> position.add(PositionCDP addPat)
Enumerated2Position --->
 position.add(ItemedCollectionCDP spPat, OWLClass elementContent)
 position.add(SimpleCollectionCDP spPat, OWLClass elementContent)

Замечание:
Конфигуратор - конфигурит тек паттерн + хранит ссылку на стратегию добавления ТЕКУЩЕГО в предыдущий + хранит ссылку на предыдущий конфигуратор. 

